"use client"
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { RecordingProvider } from "@/context/Recordingcontext";
import { ConvexProvider, ConvexReactClient } from "convex/react";
import { ConvexClientProvider } from "./ConvexClientProvider";
import { ClerkProvider, useAuth } from "@clerk/clerk-react";
import { ConvexProviderWithClerk } from "convex/react-clerk";
import Header from "./components/Header";

const convex = new ConvexReactClient(process.env.NEXT_PUBLIC_CONVEX_URL as string);



const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
   <ClerkProvider publishableKey="pk_test_ZHJpdmVuLWNhbGYtNzMuY2xlcmsuYWNjb3VudHMuZGV2JA">
    <ConvexProviderWithClerk client={convex} useAuth={useAuth}>
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased bg-black`}>
       
        
            
            <RecordingProvider>
            <Header/>  
                {children}
               
            </RecordingProvider>
         
      </body>
    </html>
    </ConvexProviderWithClerk>
    </ClerkProvider>
  );
}
